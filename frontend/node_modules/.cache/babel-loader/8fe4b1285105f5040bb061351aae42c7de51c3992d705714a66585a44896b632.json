{"ast":null,"code":"// API configuration for different environments\nconst getApiBaseUrl = () => {\n  // In development, use localhost\n  if (process.env.NODE_ENV === 'development') {\n    return 'http://localhost:3001';\n  }\n\n  // In production, use environment variable or fallback\n  return process.env.REACT_APP_API_URL || 'https://your-backend-url.vercel.app';\n};\nexport const API_BASE_URL = getApiBaseUrl();\n\n// API utility functions\nexport const apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  };\n  try {\n    const response = await fetch(url, defaultOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n};\n\n// Specific API functions\nexport const healthCheck = () => apiRequest('/api/health');\nexport const getDashboardData = token => apiRequest('/api/dashboard', {\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n});\nexport const getMenus = token => apiRequest('/api/menus', {\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n});\nexport const uploadMenu = (token, formData) => fetch(`${API_BASE_URL}/api/upload`, {\n  method: 'POST',\n  headers: {\n    'Authorization': `Bearer ${token}`\n  },\n  body: formData\n});\nexport const deleteMenu = (token, menuId) => apiRequest(`/api/menu/${menuId}`, {\n  method: 'DELETE',\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n});\nexport const getSettings = token => apiRequest('/api/user/settings', {\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n});\nexport const saveSettings = (token, settings) => apiRequest('/api/user/settings', {\n  method: 'POST',\n  headers: {\n    'Authorization': `Bearer ${token}`\n  },\n  body: JSON.stringify(settings)\n});","map":{"version":3,"names":["getApiBaseUrl","process","env","NODE_ENV","REACT_APP_API_URL","API_BASE_URL","apiRequest","endpoint","options","url","defaultOptions","headers","response","fetch","ok","Error","status","json","error","console","healthCheck","getDashboardData","token","getMenus","uploadMenu","formData","method","body","deleteMenu","menuId","getSettings","saveSettings","settings","JSON","stringify"],"sources":["C:/Users/Drood/Desktop/mmenu/frontend/src/utils/api.ts"],"sourcesContent":["// API configuration for different environments\r\nconst getApiBaseUrl = () => {\r\n  // In development, use localhost\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return 'http://localhost:3001';\r\n  }\r\n  \r\n  // In production, use environment variable or fallback\r\n  return process.env.REACT_APP_API_URL || 'https://your-backend-url.vercel.app';\r\n};\r\n\r\nexport const API_BASE_URL = getApiBaseUrl();\r\n\r\n// API utility functions\r\nexport const apiRequest = async (endpoint: string, options: RequestInit = {}) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  const defaultOptions: RequestInit = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, defaultOptions);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('API request failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Specific API functions\r\nexport const healthCheck = () => apiRequest('/api/health');\r\n\r\nexport const getDashboardData = (token: string) => \r\n  apiRequest('/api/dashboard', {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\nexport const getMenus = (token: string) => \r\n  apiRequest('/api/menus', {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\nexport const uploadMenu = (token: string, formData: FormData) => \r\n  fetch(`${API_BASE_URL}/api/upload`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n    },\r\n    body: formData,\r\n  });\r\n\r\nexport const deleteMenu = (token: string, menuId: number) => \r\n  apiRequest(`/api/menu/${menuId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\nexport const getSettings = (token: string) => \r\n  apiRequest('/api/user/settings', {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\nexport const saveSettings = (token: string, settings: any) => \r\n  apiRequest('/api/user/settings', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(settings),\r\n  }); "],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAGA,CAAA,KAAM;EAC1B;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,OAAO,uBAAuB;EAChC;;EAEA;EACA,OAAOF,OAAO,CAACC,GAAG,CAACE,iBAAiB,IAAI,qCAAqC;AAC/E,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,OAAoB,GAAG,CAAC,CAAC,KAAK;EAC/E,MAAMC,GAAG,GAAG,GAAGJ,YAAY,GAAGE,QAAQ,EAAE;EAExC,MAAMG,cAA2B,GAAG;IAClCC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,GAAGH,OAAO,CAACG;IACb,CAAC;IACD,GAAGH;EACL,CAAC;EAED,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAEC,cAAc,CAAC;IAEjD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMd,UAAU,CAAC,aAAa,CAAC;AAE1D,OAAO,MAAMe,gBAAgB,GAAIC,KAAa,IAC5ChB,UAAU,CAAC,gBAAgB,EAAE;EAC3BK,OAAO,EAAE;IACP,eAAe,EAAE,UAAUW,KAAK;EAClC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMC,QAAQ,GAAID,KAAa,IACpChB,UAAU,CAAC,YAAY,EAAE;EACvBK,OAAO,EAAE;IACP,eAAe,EAAE,UAAUW,KAAK;EAClC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAME,UAAU,GAAGA,CAACF,KAAa,EAAEG,QAAkB,KAC1DZ,KAAK,CAAC,GAAGR,YAAY,aAAa,EAAE;EAClCqB,MAAM,EAAE,MAAM;EACdf,OAAO,EAAE;IACP,eAAe,EAAE,UAAUW,KAAK;EAClC,CAAC;EACDK,IAAI,EAAEF;AACR,CAAC,CAAC;AAEJ,OAAO,MAAMG,UAAU,GAAGA,CAACN,KAAa,EAAEO,MAAc,KACtDvB,UAAU,CAAC,aAAauB,MAAM,EAAE,EAAE;EAChCH,MAAM,EAAE,QAAQ;EAChBf,OAAO,EAAE;IACP,eAAe,EAAE,UAAUW,KAAK;EAClC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMQ,WAAW,GAAIR,KAAa,IACvChB,UAAU,CAAC,oBAAoB,EAAE;EAC/BK,OAAO,EAAE;IACP,eAAe,EAAE,UAAUW,KAAK;EAClC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMS,YAAY,GAAGA,CAACT,KAAa,EAAEU,QAAa,KACvD1B,UAAU,CAAC,oBAAoB,EAAE;EAC/BoB,MAAM,EAAE,MAAM;EACdf,OAAO,EAAE;IACP,eAAe,EAAE,UAAUW,KAAK;EAClC,CAAC;EACDK,IAAI,EAAEM,IAAI,CAACC,SAAS,CAACF,QAAQ;AAC/B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}